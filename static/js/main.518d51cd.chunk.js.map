{"version":3,"sources":["components/AppNavbar.js","actions/itemActions.js","actions/types.js","components/itemModal.js","components/editModal.js","components/CommentModal.js","components/ShowHistory.js","components/CampaignList.js","components/PaginationWrapper.js","reducers/itemReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["AppNavbar","state","isOpen","toggle","_this","setState","react_default","a","createElement","reactstrap_es","color","light","expand","className","style","marginBottom","href","fa","onClick","this","navbar","target","Component","editItem","name","index","type","payload","ItemModal","modal","onChange","e","Object","defineProperty","value","onSubmit","preventDefault","newItem","id","uuid","created_time","Date","play","comments","history","activityTime","activityBy","activityTitle","activityType","activityBody","props","addItem","display","alignItems","size","marginLeft","for","placeholder","marginTop","connect","item","CommentModal","comment","addComment","length","react_transition_group","map","commentTime","commentBy","commentText","key","timeout","classNames","dist_default","format","ShowHistory","CampaignList","onDeleteClick","deleteItem","onTogglePlay","togglePlay","onClose","editing","getItems","_this2","items","itemModal","components_ShowHistory","bind","components_CommentModal","editModal","Example","aria-label","disabled","previous","active","next","React","initialState","combineReducers","arguments","undefined","action","objectSpread","filter","concat","toConsumableArray","editedItem","slice","commentedItem","toggledItem","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION__","App","es","components_AppNavbar","components_CampaignList","PaginationWrapper_Example","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.518d51cd.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink } from 'reactstrap';\nimport { FaEnvelope, FaBars } from 'react-icons/fa';\n\nclass AppNavbar extends Component{\n  state = {\n    isOpen: false\n  };\n\n  toggle = () => {\n    this.setState({\n      isOpen: !this.state.isOpen\n    })\n  };\n\n  render() {\n    return (\n      <div>\n        <Navbar color=\"light\" light expand=\"xs\" className=\"md-5\" style={{marginBottom: '2rem'}}>\n          <NavbarBrand href=\"/\" >\n            <FaEnvelope style={{color: '#289ee5'}}/> All Campaigns</NavbarBrand>\n            <NavbarToggler onClick={this.toggle}/>\n            <Collapse isOpen={this.state.isOpen} navbar >\n              <Nav className=\"ml-auto\" navbar>\n                <NavItem>\n                  <NavLink target=\"_blank\" href=\"https://github.com/mdzakir/campaigns\" >Github</NavLink>\n                </NavItem>\n              </Nav>\n            </Collapse>\n        </Navbar>\n      </div>\n    )\n  }\n\n}\n\n\n\nexport default AppNavbar;","import { ADD_ITEM, GET_ITEMS, EDIT_ITEM, DELETE_ITEM, ADD_COMMENT, TOGGLE_PLAY } from \"./types\";\n\nexport const getItems = () => {\n  return {\n    type: GET_ITEMS\n  };\n};\n\nexport const deleteItem = (id) => {\n  return {\n    type: DELETE_ITEM,\n    payload: id\n  };\n};\n\nexport const addItem = (item) => {\n  return {\n    type: ADD_ITEM,\n    payload: item\n  };\n};\n\nexport const editItem = (name, index) => {\n  return {\n    type: EDIT_ITEM,\n    payload: {name, index}\n  };\n};\n\nexport const addComment = (comment, index) => {\n  return {\n    type: ADD_COMMENT,\n    payload: { comment, index }\n  };\n};\n\nexport const togglePlay = (play, index) => {\n  return {\n    type: TOGGLE_PLAY,\n    payload: {play, index}\n  };\n};","export const ADD_ITEM = 'ADD_ITEM';\nexport const GET_ITEMS = 'GET_ITEMS';\nexport const EDIT_ITEM = 'EDIT_ITEM';\nexport const DELETE_ITEM = 'DELETE_ITEM';\nexport const ADD_COMMENT = 'ADD_COMMENT';\nexport const TOGGLE_PLAY = 'TOGGLE_PLAY';\n","import React, {Component} from 'react';\nimport { Container, Button, Modal, ModalHeader, ModalBody, ModalFooter, Input, Label, Form, FormGroup } from 'reactstrap';\nimport {connect} from 'react-redux';\nimport {addItem} from '../actions/itemActions';\nimport uuid from 'uuid';\nimport { FaPlus, FaBars } from 'react-icons/fa';\n\nclass ItemModal extends Component{\n  state = {\n    modal: false,\n    name: ''\n  };\n\n  toggle = () => {\n    this.setState({\n      modal: !this.state.modal\n    });\n  };\n\n  onChange = (e) => {\n    this.setState({[e.target.name]: e.target.value});\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    const newItem = {\n      id: uuid(),\n      name: this.state.name,\n      created_time: new Date(),\n      play: false,\n      comments: [],\n      history:[\n        {\n          activityTime: new Date(),\n          activityBy: 'Zakir',\n          activityTitle: 'Campaign Created!',\n          activityType: 'create',\n          activityBody: ''\n        }\n      ]\n    };\n    this.props.addItem(newItem);\n    this.toggle();\n  };\n\n  render() {\n    return(\n      <div>\n        <div style={{display:'flex', alignItems: 'baseline'}}>\n          <h5><FaBars /> Campaign List</h5>\n          <Button\n          color=\"primary\"\n          size=\"sm\"\n          style={{marginBottom: '2rem', marginLeft: '2rem'}}\n          onClick={this.toggle}>\n            <FaPlus /> Create new\n          </Button>\n          <Modal\n          isOpen={this.state.modal}\n          toggle={this.toggle}>\n            <ModalHeader\n            toggle={this.toggle}>\n              Create a new campaign\n            </ModalHeader>\n            <ModalBody>\n              <Form onSubmit={this.onSubmit}>\n                <FormGroup>\n                  <Label\n                  for=\"item\">Campaign name\n                  </Label>\n                  <Input\n                    name=\"name\"\n                    type=\"text\"\n                    id=\"item\"\n                    placeholder=\"Enter an campaign name\"\n                    onChange={this.onChange}\n                  />\n                  <Button\n                  color=\"dark\"\n                  style={{marginTop: '2rem'}}\n                  >\n                  Save\n                  </Button>\n                </FormGroup>\n              </Form>\n            </ModalBody>\n          </Modal>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  item: state.item\n});\n\nexport default connect(mapStateToProps, { addItem })(ItemModal);\n","import React, {Component} from 'react';\nimport { Container, Button, Modal, ModalHeader, ModalBody, ModalFooter, Input, Label, Form, FormGroup } from 'reactstrap';\nimport {connect} from 'react-redux';\nimport {editItem} from '../actions/itemActions';\nimport { FaPencilAlt } from 'react-icons/fa';\n\nclass ItemModal extends Component{\n  state = {\n    modal: false,\n    name: ''\n  };\n\n  toggle = () => {\n    this.setState({\n      modal: !this.state.modal\n    });\n  };\n\n  onChange = (e) => {\n    this.setState({[e.target.name]: e.target.value});\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n\n    // Add item via add item actions\n    this.props.editItem(this.state.name, this.props.index);\n    this.toggle();\n  };\n\n  componentDidMount() {\n    this.setState({ name: this.props.item.name })\n  }\n\n  render() {\n    return(\n      <div>\n        <div style={{display:'flex', alignItems: 'baseline'}}>\n          <span\n            className=\"tac control-button edit-btn\"\n            color=\"default\"\n            size=\"sm\"\n            onClick={this.toggle}\n          ><FaPencilAlt/> <br /><span className=\"control-button-name\">Edit</span></span>\n          <Modal\n          isOpen={this.state.modal}\n          toggle={this.toggle}>\n            <ModalHeader\n            toggle={this.toggle}>\n              Edit campaign\n            </ModalHeader>\n            <ModalBody>\n              <Form onSubmit={this.onSubmit}>\n                <FormGroup>\n                  <Label\n                  for=\"item\">Campaign name\n                  </Label>\n                  <Input\n                    name=\"name\"\n                    type=\"text\"\n                    id=\"item\"\n                    placeholder=\"Enter an campaign name\"\n                    value={this.state.name}\n                    onChange={this.onChange}\n                  />\n                  <Button\n                  color=\"dark\"\n                  style={{marginTop: '2rem'}}\n                  >\n                  Update\n                  </Button>\n                </FormGroup>\n              </Form>\n            </ModalBody>\n          </Modal>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(null, { editItem })(ItemModal);\n","import React, {Component} from 'react';\nimport { Container, Button, Modal, ModalHeader, ModalBody, ModalFooter, Input, Label, Form, FormGroup , ListGroup, ListGroupItem,} from 'reactstrap';\nimport {connect} from 'react-redux';\nimport {addComment} from '../actions/itemActions';\nimport {CSSTransition, TransitionGroup} from \"react-transition-group\";\nimport Moment from \"react-moment\";\nimport { FaComment } from 'react-icons/fa';\n\nclass CommentModal extends Component{\n  state = {\n    modal: false,\n    comment: ''\n  };\n\n  toggle = () => {\n    this.setState({\n      modal: !this.state.modal\n    });\n  };\n\n  onChange = (e) => {\n    this.setState({comment: e.target.value});\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n\n    // Add item via add item actions\n    this.props.addComment(this.state.comment, this.props.index);\n    this.toggle();\n  };\n\n  render() {\n    const { comments } = this.props.item;\n    return(\n      <div>\n        <div style={{display:'flex', alignItems: 'baseline'}}>\n          <span\n            className=\"tac control-button comment-btn\"\n            color=\"success\"\n            size=\"sm\"\n            onClick={this.toggle}\n          ><FaComment/> <br /> <span className=\"control-button-name\">Comment</span>\n          </span>\n          <Modal\n          isOpen={this.state.modal}\n          toggle={this.toggle}>\n            <ModalHeader\n            toggle={this.toggle}>\n              Comments\n            </ModalHeader>\n            <ModalBody>\n              <Form onSubmit={this.onSubmit}>\n                <FormGroup>\n                  <Input\n                    name=\"comment\"\n                    type=\"text\"\n                    id=\"item\"\n                    placeholder=\"Your Comment\"\n                    onChange={this.onChange}\n                  />\n                  <Button\n                  color=\"dark\"\n                  style={{marginTop: '2rem'}}\n                  >\n                  Add Comment\n                  </Button>\n                </FormGroup>\n              </Form>\n\n              {comments.length > 0 && <ListGroup>\n                <TransitionGroup className=\"campaign-list\">\n                  {comments.map((item, index) => {\n                    const { commentTime, commentBy, commentText } = item;\n                    return (\n                      <CSSTransition\n                        key={index}\n                        timeout={500}\n                        classNames=\"fade\">\n                        <ListGroupItem style={{display: 'flex', alignItems: 'baseline'}}>\n                          <strong className=\"campaign-name\">{commentText}\n                            <br /><span className=\"campaign-created-time\">Commented on&nbsp;\n                              <Moment format=\"HH:mm a\">{commentTime}</Moment> by {commentBy}</span>\n                          </strong>\n                        </ListGroupItem>\n                      </CSSTransition>\n                    )\n                  })}\n                </TransitionGroup>\n              </ListGroup>}\n\n            </ModalBody>\n          </Modal>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(null, { addComment })(CommentModal);\n","import React, {Component} from 'react';\nimport { Container, Button, Modal, ModalHeader, ModalBody, ModalFooter, Input, Label, Form, FormGroup , ListGroup, ListGroupItem,} from 'reactstrap';\nimport {connect} from 'react-redux';\nimport {addComment} from '../actions/itemActions';\nimport {CSSTransition, TransitionGroup} from \"react-transition-group\";\nimport { FaPlay, FaPause, FaHistory, FaPlus, FaComment, FaPencilAlt } from 'react-icons/fa';\n\nclass ShowHistory extends Component{\n  state = {\n    modal: false,\n    comment: ''\n  };\n\n  toggle = () => {\n    this.setState({\n      modal: !this.state.modal\n    });\n  };\n\n  render() {\n    const { history } = this.props.item;\n    return(\n      <div>\n        <div className=\"history-wrapper\" style={{display:'flex', alignItems: 'baseline'}}>\n          <span\n            className=\"tac control-button\"\n            color=\"success\"\n            size=\"sm\"\n            onClick={this.toggle}\n          ><FaHistory /><br /> <span className=\"control-button-name\">History</span></span>\n          <Modal\n            isOpen={this.state.modal}\n            toggle={this.toggle}>\n            <ModalHeader\n              toggle={this.toggle}>\n              <FaHistory /> History\n            </ModalHeader>\n            <ModalBody>\n              {history.length > 0 && <ListGroup>\n                <TransitionGroup className=\"history-list\">\n                  {history.map((item, index) => {\n                    const { activityBy, activityType, activityTitle, activityBody } = item;\n                    return (\n                      <CSSTransition\n                        key={index}\n                        timeout={500}\n                        classNames=\"fade\">\n                        <div className=\"history-list-item\" style={{display: 'flex', alignItems: 'baseline'}}>\n                          <span className={activityType + ' icon-type'}>\n                               {activityType === 'create' ?  <FaPlus /> :\n                                 activityType === 'rename' ? <FaPencilAlt /> :\n                                   activityType === 'play' ? <FaPlay /> :\n                                     activityType === 'pause' ? <FaPause /> : <FaComment />  }\n                            </span>\n                          <strong className=\"campaign-name\">\n\n                            {activityTitle}\n                            <br /><span className=\"campaign-created-time\">\n                            by <strong>{activityBy}</strong></span>\n                            <br /> {activityType === 'comment' ? '\"' + activityBody + '\"' : activityBody}\n                          </strong>\n                        </div>\n                      </CSSTransition>\n                    )\n                  })}\n                </TransitionGroup>\n              </ListGroup>}\n\n            </ModalBody>\n          </Modal>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(null, {})(ShowHistory);\n","import React, { Component } from 'react';\nimport { Container, ListGroup, ListGroupItem, Button } from 'reactstrap';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { connect } from 'react-redux';\nimport { getItems, deleteItem, editItem, togglePlay } from \"../actions/itemActions\";\nimport PropTypes from 'prop-types';\nimport Moment from 'react-moment';\nimport ItemModal from \"./itemModal\";\nimport EditModal from \"./editModal\";\nimport CommentModal from \"./CommentModal\";\nimport ShowHistory from './ShowHistory';\nimport { FaPauseCircle, FaPlayCircle, FaTrash } from 'react-icons/fa';\n\nclass CampaignList extends Component {\n\n  componentDidMount(){\n    this.props.getItems();\n  }\n\n  onDeleteClick = (id) => {\n    this.props.deleteItem(id);\n  };\n\n  onTogglePlay = (play, index) => {\n    this.props.togglePlay(play, index);\n  };\n\n  onClose = () => {\n    this.setState({ editing: false });\n  };\n\n  render() {\n    const {items} = this.props.item;\n    return (\n      <Container>\n        <ItemModal\n          onClose={this.onClose}\n        />\n        <ListGroup>\n          <TransitionGroup className=\"campaign-list\">\n            {items.map((item, index) => {\n              const { id, name, created_time, play } = item;\n              return (\n              <CSSTransition\n                key={id}\n                timeout={500}\n                classNames=\"fade\">\n                <ListGroupItem style={{display: 'flex', alignItems: 'baseline'}}>\n                  <span className=\"campaign-num\">{index + 1}</span>\n                  <strong className=\"campaign-name\">Campaign {index + 1} - {name}\n                    <br /><span className=\"campaign-created-time\">Created at&nbsp;\n                      <Moment format=\"HH:mm a\">\n                      {created_time}\n                    </Moment></span>\n                  </strong>\n\n                  <ShowHistory index={index} item={item} />\n                  <span\n                    className=\"tac control-button play-pause\"\n                    color=\"primary\"\n                    size=\"sm\"\n                    onClick={this.onTogglePlay.bind(this, play, index)}\n                  >\n                    {play ? <FaPauseCircle /> : <FaPlayCircle/> }\n                    <br />\n                    <span className=\"control-button-name\">{play ? 'Pause': 'Play' }</span>\n                  </span>\n                  <CommentModal index={index} item={item} />\n                  <EditModal index={index} item={item} />\n                  <span\n                    className=\"tac control-button delete-btn\"\n                    color=\"danger\"\n                    size=\"sm\"\n                    onClick={this.onDeleteClick.bind(this, id)}\n                  ><FaTrash /> <br/> <span className=\"control-button-name\">Delete</span></span>\n                </ListGroupItem>\n              </CSSTransition>\n              )\n            })}\n          </TransitionGroup>\n        </ListGroup>\n      </Container>\n    );\n  }\n}\n\n/*CampaignList.propTypes = {\n  getItems: PropTypes.func.isRequired,\n  item: PropTypes.object.isRequired,\n  play: PropTypes.bool.isRequired\n};*/\n\nconst mapStateToProps = (state) => ({\n  item: state.item\n});\n\nexport default connect(mapStateToProps, { getItems, deleteItem, editItem, togglePlay })(CampaignList);","import React from 'react';\nimport { Pagination, PaginationItem, PaginationLink } from 'reactstrap';\n\nexport default class Example extends React.Component {\n  render() {\n    return (\n      <Pagination aria-label=\"Page navigation example\">\n        <PaginationItem disabled>\n          <PaginationLink previous href=\"#\" />\n        </PaginationItem>\n        <PaginationItem active>\n          <PaginationLink href=\"#\">\n            1\n          </PaginationLink>\n        </PaginationItem>\n        <PaginationItem>\n          <PaginationLink href=\"#\">\n            2\n          </PaginationLink>\n        </PaginationItem>\n        <PaginationItem>\n          <PaginationLink href=\"#\">\n            3\n          </PaginationLink>\n        </PaginationItem>\n        <PaginationItem>\n          <PaginationLink href=\"#\">\n            4\n          </PaginationLink>\n        </PaginationItem>\n        <PaginationItem>\n          <PaginationLink href=\"#\">\n            5\n          </PaginationLink>\n        </PaginationItem>\n        <PaginationItem>\n          <PaginationLink next href=\"#\" />\n        </PaginationItem>\n      </Pagination>\n    );\n  }\n}","import uuid from \"uuid\";\nimport { ADD_ITEM, GET_ITEMS, EDIT_ITEM, DELETE_ITEM, ADD_COMMENT, TOGGLE_PLAY } from \"../actions/types\";\n\nconst initialState = {\n  items: [\n    {id: uuid(), name: 'Emails', created_time: new Date(),\n      play: false,\n      comments: [],\n      history:[\n        {\n          activityTime: new Date('2018', '10', '01'),\n          activityBy: 'Zakir',\n          activityTitle: 'Campaign Created!',\n          activityType: 'create',\n          activityBody: ''\n        }\n      ]},\n    {id: uuid(), name: 'Push Notifications', created_time: new Date(),\n      play: false,\n      comments: [],\n      history:[\n        {\n          activityTime: new Date('2018', '10', '01'),\n          activityBy: 'Zakir',\n          activityTitle: 'Campaign Created!',\n          activityType: 'create',\n          activityBody: ''\n        }\n      ]}\n  ]\n};\n\nexport default function(state = initialState, action) {\n  switch(action.type){\n    case GET_ITEMS:\n      return {\n        ...state\n      };\n    case DELETE_ITEM:\n      return {\n        ...state,\n        items: state.items.filter(item => item.id !== action.payload)\n      };\n    case ADD_ITEM:\n      return {\n        ...state,\n        items: [action.payload, ...state.items]\n      };\n    case EDIT_ITEM:\n      debugger;\n      let editedItem = state.items[action.payload.index];\n      return {\n        ...state,\n        items: [\n          ...state.items.slice(0, action.payload.index),\n          {\n            ...editedItem,\n            name: action.payload.name,\n            history: [\n              {\n                activityTime: new Date(),\n                activityBy: 'Zakir',\n                activityTitle: 'Campaign Renamed!',\n                activityType: 'rename',\n                activityBody: action.payload.name\n              },\n              ...editedItem.history\n            ]\n          },\n          ...state.items.slice(action.payload.index + 1)\n        ]\n      };\n    case ADD_COMMENT:\n      let commentedItem = state.items[action.payload.index];\n      return {\n        ...state,\n        items: [\n          ...state.items.slice(0, action.payload.index),\n          {\n            ...commentedItem,\n            history: [\n              {\n                activityTime: new Date(),\n                activityBy: 'Zakir',\n                activityTitle: 'Comment Added!',\n                activityType: 'comment',\n                activityBody: action.payload.comment\n              },\n              ...commentedItem.history\n            ],\n            comments: [\n              {\n                commentTime: new Date(),\n                commentBy: 'Zakir',\n                commentText: action.payload.comment\n              },\n              ...commentedItem.comments\n            ]\n          },\n          ...state.items.slice(action.payload.index + 1)\n        ]\n      };\n    case TOGGLE_PLAY:\n      debugger;\n      let toggledItem = state.items[action.payload.index];\n        return {\n          ...state,\n          items: [\n            ...state.items.slice(0, action.payload.index),\n            {\n              ...toggledItem,\n              history: [\n                {\n                  activityTime: new Date(),\n                  activityBy: 'Zakir',\n                  activityTitle: action.payload.play ? 'Campaign Resumed' : 'Campaign Paused',\n                  activityType: action.payload.play ? 'play' : 'pause',\n                  activityBody: ''\n                },\n                ...toggledItem.history\n              ],\n              play: !action.payload.play,\n              ...toggledItem.play\n            },\n            ...state.items.slice(action.payload.index + 1)\n          ]\n\n          /*items: state.items.map(item => {\n            if(item.id === action.payload) {\n              item.play = !item.play\n            }\n            return item;\n          })*/\n        };\n\n    default:\n      return state\n  }\n}","import { combineReducers } from 'redux';\nimport itemReducer from './itemReducer';\n\nexport default combineReducers({\n  item: itemReducer\n})","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nexport default store;","import React, { Component } from 'react';\nimport AppNavbar from './components/AppNavbar';\nimport CampaignList from './components/CampaignList';\nimport PaginationWrapper from './components/PaginationWrapper';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <div className=\"App\">\n          <AppNavbar />\n          <CampaignList/>\n          <PaginationWrapper/>\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}